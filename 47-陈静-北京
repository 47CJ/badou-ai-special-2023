import cv2
import numpy as np
from matplotlib import pyplot as plt
'''
equalizeHist-直方图均衡化
函数原理
equalizeHist(src, dst=None)
src: 图像矩阵（单通道图像）
dst: 默认即可
'''
# 获取灰度图像
img = cv2.imread("lenna.png", 1)
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# 灰度图像直方图均衡化
dst = cv2.equallizeHist(gray)

# 直方图
hist = cv2.calcHist([dst],[0],None,[256],[0,256])

plt.figure()
plt.hist(dst.ravel(),256)
plt.show()

cv2.imshow("Histogram Equalization", np.hstack([gray, dst]))
cv2.waitKey(0)



import numpy as np
import cv2
from numpy import shape
import random
def GaussianNoise(src,means,sigma,percetage):
    NoiseImg=src
    NoiseNum=int(percetage*src.shape[0]*src.shape[1])
    for i in range (NoiseNum):
        # 每次取一哥随机点
        # 把一张图片的像素用行和列表示的话，randx  代表随机生成的行，randy代表随机生成的列
        #random.randint生成随机整数
        #高斯噪声图片边缘不处理，故-1
        randX = random.randint(0,src.shape[0]-1)
        randY = random.randint(0,src.shape[1]-1)
        # 此处在原有像素灰度值上加上随机数
        NoiseImg[randX,randY] = NoiseImg[randX,randY] + random.gauss(means,sigma)
        # 若灰度值小于0，则强制为0， 若灰度值大于255则强制为255
        if NoiseImg[randX,randY] < 0:
            NoiseImg[randX,randY]= 0
        elif NoiseImg[randX,randY] > 255:
            NoiseImg[randX, randY] = 255
        return NoiseImg
img = cv2.imread('lenna.png',0)
img1 = GaussianNoise(img,2,4,0.8)
img = cv2.imread('lenna.png')
img2 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow('source',img2)
cv2.imshow('lenna_GaussianNoise',img1)
cv2.waitKey(0)



import numpy as np
import cv2
from numpy import shape
import random
def fun1(src,percetage):
    NoiseImg = src
    NoiseNum = int(percetage*src.shape[0]*src.shape[1])
    for i in range(NoiseNum):
        randX = random.randint(0,src.shape[0]-1)
        randY = random.randint(0,src.shape[1]-1)
        if random.random() <= 0.5:
            NoiseImg[randX,randY] = 0
        else:
            NoiseImg[randX,randY] = 255
    return NoiseImg

img = cv2.imread("lenna.png",0)
img1 = fun1(img,0.2)

img=cv2.imread('lenna.png')
img2 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow('source',img2)
cv2.imshow('lenna_PepperandSalt',img1)
cv2.waitKey(0)
